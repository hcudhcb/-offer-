题目描述
给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。

保证base和exponent不同时为0

思路：
二分法
首先，对于底数，如果底数为0，则0的任何次方都是0，可以直接返回0。
关键在于指数，指数可能有三种情况，有可能是正数、0、负数。
对于指数是0的情况，任何数的0次方为1。对于指数是负数的情况，可以将其转化为绝对值计算，求出结果之后再求倒数。
在计算n次方的时候，为了方便，我们根据减治的思想，通过同底数指数幂的公式计算，如下列公式。这里需要注意的是奇数和偶数的不同。
 
base ^ exponent  = base ^ (exponent / 2) * base(exponent / 2)   exponent为偶数

base ^ exponent =  base ^ (exponent / 2) * base(exponent / 2) * base    exponent为奇数

```
# -*- coding:utf-8 -*-
class Solution:
    def Power(self, base, exponent):
        # write code here
        if exponent == 0:
            return 1.0
        elif exponent == 1:
            return base
        elif base == 0:
            return 0.0
        elif exponent == -1:
            return 1.0 / base
        else:
            half = self.Power(base, exponent // 2)
            return half * half * self.Power(base, exponent % 2)
```
